{"version":3,"file":"static/js/297.c7db29db.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,4C,SAGGC,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,gCAGYD,EAASE,OAHrB,+CAIMC,QAAQC,OAAO,IAAIC,MAAM,kBAJ/B,0GAOO,SAASC,IACd,OAAOT,EAAW,GAAD,OAAIF,EAAJ,8BAAkCC,IAG9C,SAASW,EAAaC,GAC3B,OAAOX,EAAW,GAAD,OAAIF,EAAJ,wBAA4BC,EAA5B,kBAAyCY,IAGrD,SAASC,EAAmBC,GACjC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,GAAtB,OAAgCd,IAG5C,SAASe,EAAkBD,GAChC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,IAGpD,SAASgB,EAAoBF,GAClC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,M,uHC1B9CiB,EAAeC,EAAAA,GAAAA,IAAH,2FAMZC,EAAcD,EAAAA,GAAAA,IAAH,8CAIXE,EAAWF,EAAAA,GAAAA,EAAH,6C,2BCNN,SAASG,IAAoB,IAAD,IACzC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAGFa,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACvCC,GAAWC,EAAAA,EAAAA,QAAOL,GAQxB,OANAM,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,IAAmBC,GAChBoB,MAAK,SAAAtB,GAAK,OAAIW,EAASX,MACvBuB,OAAM,SAAAX,GAAK,OAAIC,EAASD,QAC1B,CAACV,KAGF,iCACE,8CACA,SAAC,KAAD,CAAMsB,GAAIT,EAAV,kBACCf,IACC,iCACE,UAACK,EAAD,YACE,gBACEoB,IAAG,6CAAwCzB,EAAM0B,aACjDC,MAAM,MACNC,IAAK5B,EAAM6B,eAAiB7B,EAAM8B,kBAEpC,UAACvB,EAAD,YACE,0BACGP,EAAM6B,eAAiB7B,EAAM8B,eADhC,KAEG9B,EAAM+B,aAAaC,MAAM,EAAG,GAF/B,QAIA,wCAAgBhC,EAAMiC,iBACtB,SAACzB,EAAD,yBACA,6BAAKR,EAAMkC,aACX,SAAC1B,EAAD,sBACA,6BAAKR,EAAMmC,OAAOC,KAAI,SAAApC,GAAK,OAAIA,EAAMqC,QAAMC,KAAK,gBAIpD,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASd,GAAG,OAAOP,MAAO,CAAEC,KAAMC,EAASoB,SAA3C,qBAIF,yBACE,SAAC,KAAD,CAASf,GAAG,UAAUP,MAAO,CAAEC,KAAMC,EAASoB,SAA9C,8BAMN,SAAC,EAAAC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,SAIL7B,IACC,qEAA6CA,EAAM8B","sources":["api/fetchFilms.js","views/MovieDetailsPage/MovieDetailsPage.styled.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '?api_key=2ddded2d287329b6efbf335a6f8f3bd4';\n// 'https://api.themoviedb.org/3/movie/550?api_key=2ddded2d287329b6efbf335a6f8f3bd4';\n\nasync function fetchFilms(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('404 Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchFilms(`${BASE_URL}/trending/movie/day${KEY}`);\n}\n\nexport function searchMovies(movie) {\n  return fetchFilms(`${BASE_URL}/search/movie${KEY}&query=${movie}`);\n}\n\nexport function getOneMovieDetails(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}${KEY}`);\n}\n\nexport function getOneMovieActors(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}/credits${KEY}`);\n}\n\nexport function getOneMovieReviewes(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}/reviews${KEY}`);\n}\n","import styled from 'styled-components';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin-left: 20px;\n`;\n\nexport const BoldText = styled.p`\n  font-weight: 700;\n`;\n","import { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { MovieWrapper, InfoWrapper, BoldText } from './MovieDetailsPage.styled';\nimport { getOneMovieDetails } from 'api/fetchFilms';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n  const backFrom = useRef(backLinkHref);\n\n  useEffect(() => {\n    getOneMovieDetails(movieId)\n      .then(movie => setMovie(movie))\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <h1>MovieDetailsPage</h1>\n      <Link to={backLinkHref}>Back</Link>\n      {movie && (\n        <>\n          <MovieWrapper>\n            <img\n              src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n              width=\"300\"\n              alt={movie.original_name || movie.original_title}\n            />\n            <InfoWrapper>\n              <h2>\n                {movie.original_name || movie.original_title} (\n                {movie.release_date.slice(0, 4)})\n              </h2>\n              <p>User score: {movie.vote_average}</p>\n              <BoldText>Overview:</BoldText>\n              <p> {movie.overview}</p>\n              <BoldText>Genres</BoldText>\n              <p> {movie.genres.map(movie => movie.name).join(', ')}</p>\n            </InfoWrapper>\n          </MovieWrapper>\n\n          <div>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <NavLink to=\"cast\" state={{ from: backFrom.current }}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\" state={{ from: backFrom.current }}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading page...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {error && (\n        <h2>Sorry! Backend server response problem, {error.message}</h2>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchFilms","url","fetch","response","ok","json","Promise","reject","Error","fetchTrending","searchMovies","movie","getOneMovieDetails","movieId","getOneMovieActors","getOneMovieReviewes","MovieWrapper","styled","InfoWrapper","BoldText","MovieDetailsPage","useState","setMovie","error","setError","useParams","backLinkHref","useLocation","state","from","backFrom","useRef","useEffect","then","catch","to","src","poster_path","width","alt","original_name","original_title","release_date","slice","vote_average","overview","genres","map","name","join","current","Suspense","fallback","message"],"sourceRoot":""}