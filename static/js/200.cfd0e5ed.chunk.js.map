{"version":3,"file":"static/js/200.cfd0e5ed.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,4C,SAGGC,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,gCAGYD,EAASE,OAHrB,+CAIMC,QAAQC,OAAO,IAAIC,MAAM,kBAJ/B,0GAOO,SAASC,IACd,OAAOT,EAAW,GAAD,OAAIF,EAAJ,8BAAkCC,IAG9C,SAASW,EAAaC,GAC3B,OAAOX,EAAW,GAAD,OAAIF,EAAJ,wBAA4BC,EAA5B,kBAAyCY,IAGrD,SAASC,EAAmBC,GACjC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,GAAtB,OAAgCd,IAG5C,SAASe,EAAkBD,GAChC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,IAGpD,SAASgB,EAAoBF,GAClC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,M,6HC3B9CiB,E,MAAYC,GAAAA,GAAH,iE,SCIP,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAyBC,MAAK,SAAAC,GAC5B,OAAON,EAASM,EAAOC,cAExB,KAGD,iCACE,SAACZ,EAAD,wBACA,wBACGI,GACCA,EAAMS,KAAI,SAAAC,GACR,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAKE,IAAMC,MAAO,CAAEC,KAAMZ,GAA9C,SACGQ,EAAKK,eAAiBL,EAAKM,kBAFvBN,EAAKE","sources":["api/fetchFilms.js","views/HomePage/HomePage.styled.jsx","views/HomePage/HomePage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '?api_key=2ddded2d287329b6efbf335a6f8f3bd4';\n// 'https://api.themoviedb.org/3/movie/550?api_key=2ddded2d287329b6efbf335a6f8f3bd4';\n\nasync function fetchFilms(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('404 Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchFilms(`${BASE_URL}/trending/movie/day${KEY}`);\n}\n\nexport function searchMovies(movie) {\n  return fetchFilms(`${BASE_URL}/search/movie${KEY}&query=${movie}`);\n}\n\nexport function getOneMovieDetails(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}${KEY}`);\n}\n\nexport function getOneMovieActors(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}/credits${KEY}`);\n}\n\nexport function getOneMovieReviewes(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}/reviews${KEY}`);\n}\n","import styled from 'styled-components';\nexport const PageTitle = styled.h1`\n  color: orangered;\n  font-size: 30px;\n`;\n","import * as filmsAPI from '../../api/fetchFilms';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PageTitle } from './HomePage.styled';\n\nexport default function HomePage() {\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    filmsAPI.fetchTrending().then(result => {\n      return setFilms(result.results);\n    });\n  }, []);\n\n  return (\n    <>\n      <PageTitle>HomePage</PageTitle>\n      <ul>\n        {films &&\n          films.map(film => {\n            return (\n              <li key={film.id}>\n                <Link to={`movies/${film.id}`} state={{ from: location }}>\n                  {film.original_name || film.original_title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchFilms","url","fetch","response","ok","json","Promise","reject","Error","fetchTrending","searchMovies","movie","getOneMovieDetails","movieId","getOneMovieActors","getOneMovieReviewes","PageTitle","styled","HomePage","useState","films","setFilms","location","useLocation","useEffect","filmsAPI","then","result","results","map","film","to","id","state","from","original_name","original_title"],"sourceRoot":""}