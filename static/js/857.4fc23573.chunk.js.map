{"version":3,"file":"static/js/857.4fc23573.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,4C,SAGGC,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,gCAGYD,EAASE,OAHrB,+CAIMC,QAAQC,OAAO,IAAIC,MAAM,kBAJ/B,0GAOO,SAASC,IACd,OAAOT,EAAW,GAAD,OAAIF,EAAJ,8BAAkCC,IAG9C,SAASW,EAAaC,GAC3B,OAAOX,EAAW,GAAD,OAAIF,EAAJ,wBAA4BC,EAA5B,kBAAyCY,IAGrD,SAASC,EAAmBC,GACjC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,GAAtB,OAAgCd,IAG5C,SAASe,EAAkBD,GAChC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,IAGpD,SAASgB,EAAoBF,GAClC,OAAOb,EAAW,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,M,yIC1B9CiB,EAAYC,EAAAA,GAAAA,GAAH,8DAKTC,EAASD,EAAAA,GAAAA,OAAH,+TAOM,SAAAE,GAAC,OAAKA,EAAEC,QAAU,SAAW,eAYzCC,EAAQJ,EAAAA,GAAAA,MAAH,6H,SCrBH,SAASK,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWD,EAAAA,EAAAA,MAEjB,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/BC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACHJ,GAGLK,EAAAA,GAAsBL,GAAOM,MAAK,SAAAnC,GAChC,OAAOsB,EAAStB,EAASoC,cAE1B,CAACP,IAWJ,OACE,iCACE,SAAChB,EAAD,0BACA,kBAAMwB,SAZW,SAAAC,GACnBA,EAAEC,iBACGD,EAAEE,OAAOC,YAAYC,MAAMC,QAGhCf,EAAgB,CAAEC,MAAOS,EAAEE,OAAOC,YAAYC,MAAMC,UAOlD,WACE,SAACzB,EAAD,CAAO0B,KAAK,iBACZ,SAAC7B,EAAD,CAAQ8B,KAAK,SAAb,uBAEDxB,GACCA,EAAMyB,KAAI,SAAAC,GACR,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKzB,EAAL,YAAiBwB,EAAKE,IAAMC,MAAO,CAAEC,KAAM1B,GAAnD,SACGsB,EAAKK,eAAiBL,EAAKM,kBAFvBN,EAAKE","sources":["api/fetchFilms.js","views/MoviesPage/MoviesPage.styled.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '?api_key=2ddded2d287329b6efbf335a6f8f3bd4';\n// 'https://api.themoviedb.org/3/movie/550?api_key=2ddded2d287329b6efbf335a6f8f3bd4';\n\nasync function fetchFilms(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('404 Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchFilms(`${BASE_URL}/trending/movie/day${KEY}`);\n}\n\nexport function searchMovies(movie) {\n  return fetchFilms(`${BASE_URL}/search/movie${KEY}&query=${movie}`);\n}\n\nexport function getOneMovieDetails(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}${KEY}`);\n}\n\nexport function getOneMovieActors(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}/credits${KEY}`);\n}\n\nexport function getOneMovieReviewes(movieId) {\n  return fetchFilms(`${BASE_URL}/movie/${movieId}/reviews${KEY}`);\n}\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  color: orange;\n  font-size: 30px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-content: center;\n  margin-left: 15px;\n\n  padding: 10px;\n  /* background-color: ${p => (p.hovered ? 'orange' : 'orangered')};\n\t */\n  background-color: orange;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n\n  :hover {\n    background-color: orangered;\n  }\n`;\n\nexport const Input = styled.input`\n  background-color: #f0f0f0;\n  border: #0b0b0b 1px solid;\n  border-radius: 4px;\n  padding: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport * as filmsAPI from '../../api/fetchFilms';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { PageTitle, Button, Input } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const [films, setFilms] = useState(null);\n\n  const { pathname } = useLocation();\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  console.log(query);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    filmsAPI.searchMovies(query).then(response => {\n      return setFilms(response.results);\n    });\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!e.target.searchInput.value.trim()) {\n      return;\n    }\n    setSearchParams({ query: e.target.searchInput.value.trim() });\n    // navigate(`${pathname}?query=${e.target.searchInput.value}`);\n  };\n\n  return (\n    <>\n      <PageTitle>MoviesPage</PageTitle>\n      <form onSubmit={handleSubmit}>\n        <Input name=\"searchInput\" />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      {films &&\n        films.map(film => {\n          return (\n            <li key={film.id}>\n              <Link to={`${pathname}/${film.id}`} state={{ from: location }}>\n                {film.original_name || film.original_title}\n              </Link>\n            </li>\n          );\n        })}\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchFilms","url","fetch","response","ok","json","Promise","reject","Error","fetchTrending","searchMovies","movie","getOneMovieDetails","movieId","getOneMovieActors","getOneMovieReviewes","PageTitle","styled","Button","p","hovered","Input","MoviesPage","useState","films","setFilms","pathname","useLocation","location","useSearchParams","searchParams","setSearchParams","query","get","console","log","useEffect","filmsAPI","then","results","onSubmit","e","preventDefault","target","searchInput","value","trim","name","type","map","film","to","id","state","from","original_name","original_title"],"sourceRoot":""}